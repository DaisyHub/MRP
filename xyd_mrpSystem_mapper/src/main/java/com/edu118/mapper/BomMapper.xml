<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu118.mapper.BomMapper">
  <resultMap id="BaseResultMap" type="com.edu118.po.Bom">
    <result column="bom_id" jdbcType="VARCHAR" property="bomId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="parts_id" jdbcType="INTEGER" property="partsId" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bom_id, product_id, parts_id, unit, count, remarks
  </sql>
  <select id="selectByExample" parameterType="com.edu118.po.BomExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bom
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="myPagin != null">
      limit #{myPagin.startIndex} , #{myPagin.pageSize}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.edu118.po.BomExample">
    delete from bom
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.edu118.po.Bom">
    insert into bom (bom_id, product_id, parts_id, 
      unit, count, remarks
      )
    values (#{bomId,jdbcType=VARCHAR}, #{productId,jdbcType=INTEGER}, #{partsId,jdbcType=INTEGER}, 
      #{unit,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.edu118.po.Bom">
    insert into bom
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bomId != null">
        bom_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="partsId != null">
        parts_id,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bomId != null">
        #{bomId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="partsId != null">
        #{partsId,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.edu118.po.BomExample" resultType="java.lang.Long">
    select count(*) from bom
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bom
    <set>
      <if test="record.bomId != null">
        bom_id = #{record.bomId,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.partsId != null">
        parts_id = #{record.partsId,jdbcType=INTEGER},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bom
    set bom_id = #{record.bomId,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=INTEGER},
      parts_id = #{record.partsId,jdbcType=INTEGER},
      unit = #{record.unit,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>